{
    "title": "components v1.20.60",
    "description": "List of all components used in this item.",
    "type": "object",
    "properties": {
        "minecraft:allow_off_hand": {
            "description": "The allow_off_hand component determines whether the item can be placed in the off hand slot of the inventory.",
            "$ref": "#/$defs/2987623390"
        },
        "minecraft:block_placer": {
            "description": "Items with the block_placer component will place a block when used.",
            "$ref": "#/$defs/1178544591"
        },
        "minecraft:can_destroy_in_creative": {
            "description": "The can_destroy_in_creative component determines if the item can be used by a player to break blocks when in creative mode.",
            "$ref": "#/$defs/2819452145"
        },
        "minecraft:cooldown": {
            "description": "After you use an item, all items specified with the same `cool down category` setting becomes unusable for the duration specified by the 'cool down time' setting in this component.",
            "$ref": "#/$defs/1413510600"
        },
        "minecraft:damage": {
            "description": "The damage component determines how much extra damage the item does on attack.",
            "$ref": "#/$defs/2355534844"
        },
        "minecraft:digger": {
            "description": "Digger item component specifies how quickly this item can dig specific blocks.",
            "$ref": "#/$defs/1093953013"
        },
        "minecraft:display_name": {
            "description": "The display_name item component specifies the text shown whenever an item's name is displayed, like in hover text.",
            "$ref": "#/$defs/4293809098"
        },
        "minecraft:durability": {
            "description": "The durability item component specifies how much damage the item takes before breaking, and allows the item to be combined to repair or augment them.",
            "$ref": "#/$defs/2663653758"
        },
        "minecraft:enchantable": {
            "description": "The enchantable component specifies what enchantments can be applied to the item. Not all enchantments will have an effect on all item components.",
            "$ref": "#/$defs/3828799658"
        },
        "minecraft:entity_placer": {
            "description": "The entity_placer item component specifies the blocks that the item can be placed on.",
            "$ref": "#/$defs/2610026031"
        },
        "minecraft:food": {
            "description": "When an item has a food component, it becomes edible to the player. Must have the 'minecraft:use_duration' component in order to function properly.",
            "$ref": "#/$defs/3906212947"
        },
        "minecraft:fuel": {
            "description": "Fuel item component allows this item to be used as fuel in a furnace to 'cook' other items.",
            "$ref": "#/$defs/3372804247"
        },
        "minecraft:glint": {
            "description": "The glint component determines whether the item has the enchanted glint render effect on it.",
            "$ref": "#/$defs/1025605201"
        },
        "minecraft:hand_equipped": {
            "description": "The hand_equipped component determines if an item is rendered like a tool while it is in a player's hand.",
            "$ref": "#/$defs/3792304927"
        },
        "minecraft:hover_text_color": {
            "description": "The hover_text_color component specifies the color of the item name when the players hovers the cursor over the item.",
            "$ref": "#/$defs/1862654147"
        },
        "minecraft:icon": {
            "description": "Icon item component determines which icon graphic will be used to represent the item in the UI and elsewhere.",
            "$ref": "#/$defs/3209899485"
        },
        "minecraft:interact_button": {
            "description": "This component is a boolean or string that determines if the interact button is shown in touch controls and what text is displayed on the button. When set as true, default \"Use Item\" text will be displayed.",
            "$ref": "#/$defs/2801422565"
        },
        "minecraft:item_storage": {
            "description": "The Storage Item Component is used for storing Items within an Item's User Data",
            "$ref": "#/$defs/757583938"
        },
        "minecraft:liquid_clipped": {
            "description": "The liquid_clipped component determines whether the item interacts with liquid blocks on use.",
            "$ref": "#/$defs/910690552"
        },
        "minecraft:max_stack_size": {
            "description": "The max_stack_size component specifies how many of the item can be stacked together.",
            "$ref": "#/$defs/3633237758"
        },
        "minecraft:projectile": {
            "description": "Projectile items shoot out, like an arrow.",
            "$ref": "#/$defs/2543985138"
        },
        "minecraft:record": {
            "description": "Record Item Component. Used by record items to play music.",
            "$ref": "#/$defs/2714251964"
        },
        "minecraft:repairable": {
            "description": "The repairable item component specifies which items can be used to repair this item, along with how much durability is gained.",
            "$ref": "#/$defs/2707383096"
        },
        "minecraft:shooter": {
            "description": "Shooter Item Component.",
            "$ref": "#/$defs/1861287593"
        },
        "minecraft:should_despawn": {
            "description": "Should_despawn component determines if the item should eventually despawn while floating in the world",
            "$ref": "#/$defs/869455920"
        },
        "minecraft:stacked_by_data": {
            "description": "The stacked_by_data component determines whether the same items with different aux values can stack. Also defines whether the item entities can merge while floating in the world.",
            "$ref": "#/$defs/3566406297"
        },
        "minecraft:tags": {
            "description": "The tags component specifies which tags an item has on it.",
            "$ref": "#/$defs/2623865080"
        },
        "minecraft:throwable": {
            "description": "Throwable items can be thrown by the player, such as a snowball.",
            "$ref": "#/$defs/2210327101"
        },
        "minecraft:use_animation": {
            "description": "Use_animation specifies which animation is played when the player uses the item.",
            "$ref": "#/$defs/3520278386"
        },
        "minecraft:use_modifiers": {
            "description": "This component modifies use effects, including how long the item takes to use and the player's speed when used in combination with components like \"shooter\", \"throwable\", or \"food\".",
            "$ref": "#/$defs/466752078"
        },
        "minecraft:wearable": {
            "description": "Wearable items can be worn by a player in the head, chest, legs, feet, or off-hand slots.",
            "$ref": "#/$defs/2024711926"
        }
    },
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "components v1.20.60",
    "$defs": {
        "1025605201": {
            "title": "minecraft:glint v1.20.50",
            "description": "The glint component determines whether the item has the enchanted glint render effect on it.",
            "oneOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "description": "Determines whether the item has the glint effect.",
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "1093953013": {
            "title": "minecraft:digger v1.20.50",
            "description": "Digger item component specifies how quickly this item can dig specific blocks.",
            "type": "object",
            "properties": {
                "destroy_speeds": {
                    "title": "sequence container (class std::vector<struct Puv::v1_20_50::DiggerItemComponent::BlockInfo,class std::allocator<struct Puv::v1_20_50::DiggerItemComponent::BlockInfo> >)",
                    "description": "A list of blocks to dig with correlating speeds of digging.",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/3421086714"
                    }
                },
                "use_efficiency": {
                    "description": "Determines whether this item should be impacted if the efficiency enchantment is applied to it.",
                    "type": "boolean"
                }
            }
        },
        "1178544591": {
            "title": "minecraft:block_placer v1.20.50",
            "description": "Items with the block_placer component will place a block when used.",
            "type": "object",
            "properties": {
                "block": {
                    "description": "Defines the block that will be placed.",
                    "type": "string"
                },
                "use_on": {
                    "title": "sequence container (class std::vector<struct Puv::v1_20_50::BlockDescriptor,class std::allocator<struct Puv::v1_20_50::BlockDescriptor> >)",
                    "description": "List of block descriptors of the blocks that this item can be used on. If left empty, all blocks will be allowed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/4107396053"
                    }
                }
            },
            "required": [
                "block"
            ]
        },
        "1181846166": {
            "title": "struct Puv::Legacy::ExpressionNode",
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "number"
                },
                {
                    "type": "object",
                    "properties": {
                        "expression": {
                            "type": "string"
                        },
                        "version": {
                            "type": "integer"
                        }
                    },
                    "required": [
                        "expression",
                        "version"
                    ]
                }
            ]
        },
        "1290538044": {
            "title": "compound_proxy",
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "integer"
                }
            ]
        },
        "1413510600": {
            "title": "minecraft:cooldown v1.20.50",
            "description": "After you use an item, all items specified with the same `cool down category` setting becomes unusable for the duration specified by the 'cool down time' setting in this component.",
            "type": "object",
            "properties": {
                "category": {
                    "description": "The type of cool down for this item. All items with a cool down component with the same category are put on cool down when one is used.",
                    "type": "string"
                },
                "duration": {
                    "description": "The duration of time (in seconds) items with a matching category will spend cooling down before becoming usable again.",
                    "type": "number"
                }
            },
            "required": [
                "category",
                "duration"
            ]
        },
        "1861287593": {
            "title": "minecraft:shooter v1.20.50",
            "description": "Shooter Item Component.",
            "type": "object",
            "properties": {
                "ammunition": {
                    "title": "sequence container (class std::vector<struct Puv::v1_20_50::ShooterItemComponent::Ammunition,class std::allocator<struct Puv::v1_20_50::ShooterItemComponent::Ammunition> >)",
                    "description": "Ammunition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/2221989686"
                    }
                },
                "charge_on_draw": {
                    "description": "Charge on draw? Default is set to false.",
                    "type": "boolean"
                },
                "max_draw_duration": {
                    "description": "Draw Duration. Default is set to 0.",
                    "type": "number"
                },
                "scale_power_by_draw_duration": {
                    "description": "Scale power by draw duration? Default is set to false.",
                    "type": "boolean"
                }
            }
        },
        "1862654147": {
            "title": "minecraft:hover_text_color v1.20.50",
            "description": "The hover_text_color component specifies the color of the item name when the players hovers the cursor over the item.",
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "description": "Specifies the color of the item's hover text.",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "2024711926": {
            "title": "minecraft:wearable v1.20.50",
            "description": "Wearable items can be worn by a player in the head, chest, legs, feet, or off-hand slots.",
            "type": "object",
            "properties": {
                "protection": {
                    "description": "How much protection the wearable item provides. Default is set to 0.",
                    "minimum": 0.0,
                    "type": "integer"
                },
                "slot": {
                    "title": "enum Puv::Legacy::EquipmentSlot",
                    "description": "Specifies where the item can be worn. If any non-hand slot is chosen, the max stack size is set to 1.",
                    "type": "string",
                    "enum": [
                        "slot.armor.chest",
                        "slot.armor.feet",
                        "slot.armor.head",
                        "slot.armor.legs",
                        "slot.weapon.offhand"
                    ]
                }
            },
            "required": [
                "slot"
            ]
        },
        "2122767410": {
            "title": "struct Puv::v1_20_50::RepairableItemComponent::RepairItemEntry",
            "oneOf": [
                {
                    "title": "sequence container (class std::vector<struct Puv::Legacy::ItemDescriptor,class std::allocator<struct Puv::Legacy::ItemDescriptor> >)",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/2849785526"
                    }
                },
                {
                    "type": "object",
                    "properties": {
                        "items": {
                            "title": "sequence container (class std::vector<struct Puv::Legacy::ItemDescriptor,class std::allocator<struct Puv::Legacy::ItemDescriptor> >)",
                            "description": "Items that may be used to repair an item.",
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/2849785526"
                            }
                        },
                        "repair_amount": {
                            "description": "How much the item is repaired.",
                            "$ref": "#/$defs/1181846166"
                        }
                    },
                    "required": [
                        "items"
                    ]
                }
            ]
        },
        "2210327101": {
            "title": "minecraft:throwable v1.20.50",
            "description": "Throwable items can be thrown by the player, such as a snowball.",
            "type": "object",
            "properties": {
                "default_offset_scale": {
                    "description": "The scale at which the throw position is adjusted by the aim direction.",
                    "type": "number"
                },
                "do_swing_animation": {
                    "description": "Determines whether the item should use the swing animation when thrown. Default is set to false.",
                    "type": "boolean"
                },
                "inside_block_offset_scale": {
                    "description": "The scale at which the throw position is adjusted by the aim direction if the default throw position is inside a solid block.",
                    "type": "number"
                },
                "launch_power_scale": {
                    "description": "The scale at which the power of the throw increases. Default is set to 1.0.",
                    "type": "number"
                },
                "max_draw_duration": {
                    "description": "The maximum duration to draw a throwable item. Default is set to 0.0.",
                    "type": "number"
                },
                "max_launch_power": {
                    "description": "The maximum power to launch the throwable item. Default is set to 1.0.",
                    "type": "number"
                },
                "min_draw_duration": {
                    "description": "The minimum duration to draw a throwable item. Default is set to 0.0.",
                    "type": "number"
                },
                "scale_power_by_draw_duration": {
                    "description": "Whether or not the power of the throw increases with duration charged. Default is set to false.",
                    "type": "boolean"
                }
            }
        },
        "2221989686": {
            "title": "struct Puv::v1_20_50::ShooterItemComponent::Ammunition",
            "type": "object",
            "properties": {
                "item": {
                    "description": "Ammunition item description identifier.",
                    "$ref": "#/$defs/2849785526"
                },
                "search_inventory": {
                    "description": "Can search inventory? Default is set to false.",
                    "type": "boolean"
                },
                "use_in_creative": {
                    "description": "Can use in creative mode? Default is set to false.",
                    "type": "boolean"
                },
                "use_offhand": {
                    "description": "Can use off-hand? Default is set to false.",
                    "type": "boolean"
                }
            },
            "required": [
                "item"
            ]
        },
        "2355534844": {
            "title": "minecraft:damage v1.20.50",
            "description": "The damage component determines how much extra damage the item does on attack.",
            "oneOf": [
                {
                    "minimum": 0.0,
                    "type": "integer"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "description": "Specifies how much extra damage the item does, must be a positive number.",
                            "minimum": 0.0,
                            "type": "integer"
                        }
                    }
                }
            ]
        },
        "2543985138": {
            "title": "minecraft:projectile v1.20.50",
            "description": "Projectile items shoot out, like an arrow.",
            "type": "object",
            "properties": {
                "minimum_critical_power": {
                    "description": "Specifies how long a player must charge a projectile for it to critically hit.",
                    "type": "number"
                },
                "projectile_entity": {
                    "description": "Which entity is to be fired as a projectile.",
                    "minLength": 0,
                    "maxLength": 18446744073709551615,
                    "pattern": "^(?:\\w+(?:\\.\\w+)*:(?=\\w))?(?:\\w+(?:\\.\\w+)*)(?:<((?:\\w+(?:\\.\\w+)*:(?=\\w))?\\w+(?:\\.\\w+)*)*>)?$",
                    "type": "string"
                }
            },
            "required": [
                "projectile_entity"
            ]
        },
        "2610026031": {
            "title": "minecraft:entity_placer v1.20.50",
            "description": "The entity_placer item component specifies the blocks that the item can be placed on.",
            "type": "object",
            "properties": {
                "dispense_on": {
                    "title": "sequence container (class std::vector<struct Puv::v1_20_50::BlockDescriptor,class std::allocator<struct Puv::v1_20_50::BlockDescriptor> >)",
                    "description": "List of block descriptors of the blocks that this item can be dispensed on. If left empty, all blocks will be allowed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/4107396053"
                    }
                },
                "entity": {
                    "description": "The entity to be placed in the world.",
                    "minLength": 0,
                    "maxLength": 18446744073709551615,
                    "pattern": "^(?:\\w+(?:\\.\\w+)*:(?=\\w))?(?:\\w+(?:\\.\\w+)*)(?:<((?:\\w+(?:\\.\\w+)*:(?=\\w))?\\w+(?:\\.\\w+)*)*>)?$",
                    "type": "string"
                },
                "use_on": {
                    "title": "sequence container (class std::vector<struct Puv::v1_20_50::BlockDescriptor,class std::allocator<struct Puv::v1_20_50::BlockDescriptor> >)",
                    "description": "List of block descriptors of the blocks that this item can be used on. If left empty, all blocks will be allowed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/4107396053"
                    }
                }
            }
        },
        "2623865080": {
            "title": "minecraft:tags v1.20.50",
            "description": "The tags component specifies which tags an item has on it.",
            "type": "object",
            "properties": {
                "tags": {
                    "title": "sequence container (class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >)",
                    "description": "An array that can contain multiple item tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "2663653758": {
            "title": "minecraft:durability v1.20.50",
            "description": "The durability item component specifies how much damage the item takes before breaking, and allows the item to be combined to repair or augment them.",
            "type": "object",
            "properties": {
                "damage_chance": {
                    "description": "Specifies the percentage chance of this item losing durability. Default is set to 100. Defined as an int range with min and max value.",
                    "$ref": "#/$defs/4167449497"
                },
                "max_durability": {
                    "description": "Max durability is the amount of damage that this item can take before breaking. This is a required parameter and has a minimum of 0.",
                    "minimum": 0.0,
                    "type": "integer"
                }
            },
            "required": [
                "max_durability"
            ]
        },
        "2707383096": {
            "title": "minecraft:repairable v1.20.50",
            "description": "The repairable item component specifies which items can be used to repair this item, along with how much durability is gained.",
            "type": "object",
            "properties": {
                "repair_items": {
                    "title": "sequence container (class std::vector<struct Puv::v1_20_50::RepairableItemComponent::RepairItemEntry,class std::allocator<struct Puv::v1_20_50::RepairableItemComponent::RepairItemEntry> >)",
                    "description": "List of repair item entries. Each entry needs to define a list of strings for `items` that can be used for the repair and an optional `repair_amount` for how much durability is gained.",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/2122767410"
                    }
                }
            }
        },
        "2714251964": {
            "title": "minecraft:record v1.20.50",
            "description": "Record Item Component. Used by record items to play music.",
            "type": "object",
            "properties": {
                "comparator_signal": {
                    "description": "Specifies signal strength for comparator blocks to use, from 1 - 13.",
                    "type": "integer"
                },
                "duration": {
                    "description": "Specifies duration of sound event in seconds, float value.",
                    "type": "number"
                },
                "sound_event": {
                    "title": "enum Puv::Legacy::LevelSoundEvent",
                    "description": "Sound event type: 13, cat, blocks, chirp, far, mall, mellohi, stal, strad, ward, 11, wait, pigstep, otherside, 5, relic.",
                    "type": "string",
                    "enum": [
                        "add.chest",
                        "admire",
                        "agitated",
                        "ambient",
                        "ambient.aggressive",
                        "ambient.baby",
                        "ambient.basalt_deltas.additions",
                        "ambient.basalt_deltas.loop",
                        "ambient.candle",
                        "ambient.cave",
                        "ambient.crimson_forest.additions",
                        "ambient.crimson_forest.loop",
                        "ambient.crimson_forest.mood",
                        "ambient.in.air",
                        "ambient.in.raid",
                        "ambient.in.water",
                        "ambient.nether_wastes.additions",
                        "ambient.nether_wastes.loop",
                        "ambient.nether_wastes.mood",
                        "ambient.pollinate",
                        "ambient.screamer",
                        "ambient.soulsand_valley.additions",
                        "ambient.soulsand_valley.loop",
                        "ambient.soulsand_valley.mood",
                        "ambient.tame",
                        "ambient.underwater.enter",
                        "ambient.underwater.exit",
                        "ambient.warped_forest.additions",
                        "ambient.warped_forest.loop",
                        "ambient.warped_forest.mood",
                        "ambient.worried",
                        "angry",
                        "apply_effect.bad_omen",
                        "apply_effect.raid_omen",
                        "apply_effect.trial_omen",
                        "armor",
                        "armor.break_wolf",
                        "armor.crack_wolf",
                        "armor.equip_chain",
                        "armor.equip_diamond",
                        "armor.equip_elytra",
                        "armor.equip_generic",
                        "armor.equip_gold",
                        "armor.equip_iron",
                        "armor.equip_leather",
                        "armor.equip_netherite",
                        "armor.equip_wolf",
                        "armor.repair_wolf",
                        "armor.unequip_wolf",
                        "attach",
                        "attack",
                        "attack.nodamage",
                        "attack.strong",
                        "balloonpop",
                        "beacon.activate",
                        "beacon.ambient",
                        "beacon.deactivate",
                        "beacon.power",
                        "blast",
                        "block.bamboo_sapling.place",
                        "block.barrel.close",
                        "block.barrel.open",
                        "block.beehive.drip",
                        "block.beehive.enter",
                        "block.beehive.exit",
                        "block.beehive.shear",
                        "block.beehive.work",
                        "block.bell.hit",
                        "block.blastfurnace.fire_crackle",
                        "block.campfire.crackle",
                        "block.cartography_table.use",
                        "block.click",
                        "block.click.fail",
                        "block.composter.empty",
                        "block.composter.fill",
                        "block.composter.fill_success",
                        "block.composter.ready",
                        "block.copper_bulb.turn_off",
                        "block.copper_bulb.turn_on",
                        "block.decorated_pot.insert",
                        "block.decorated_pot.insert_fail",
                        "block.enchanting_table.use",
                        "block.end_portal.spawn",
                        "block.end_portal_frame.fill",
                        "block.fletching_table.use",
                        "block.frog_spawn.break",
                        "block.frog_spawn.hatch",
                        "block.furnace.lit",
                        "block.grindstone.use",
                        "block.loom.use",
                        "block.scaffolding.climb",
                        "block.sculk.spread",
                        "block.sculk_catalyst.bloom",
                        "block.sculk_sensor.place",
                        "block.sculk_shrieker.place",
                        "block.sculk_shrieker.shriek",
                        "block.sign.waxed_interact_fail",
                        "block.smithing_table.use",
                        "block.smoker.smoke",
                        "block.sniffer_egg.crack",
                        "block.sniffer_egg.hatch",
                        "block.stonecutter.use",
                        "block.sweet_berry_bush.hurt",
                        "block.sweet_berry_bush.pick",
                        "block.turtle_egg.attack",
                        "block.turtle_egg.break",
                        "block.turtle_egg.crack",
                        "block.turtle_egg.hatch",
                        "boost",
                        "born",
                        "bottle.dragonbreath",
                        "bottle.empty",
                        "bottle.fill",
                        "bow",
                        "bow.hit",
                        "break",
                        "break.block",
                        "break_pot",
                        "breathe",
                        "breeze_wind_charge.burst",
                        "brush",
                        "brush_completed",
                        "bubble.down",
                        "bubble.downinside",
                        "bubble.pop",
                        "bubble.up",
                        "bubble.upinside",
                        "bucket.empty.fish",
                        "bucket.empty.lava",
                        "bucket.empty.powder_snow",
                        "bucket.empty.water",
                        "bucket.fill.fish",
                        "bucket.fill.lava",
                        "bucket.fill.powder_snow",
                        "bucket.fill.water",
                        "bullet.hit",
                        "bundle.drop_contents",
                        "bundle.insert",
                        "bundle.remove_one",
                        "burp",
                        "button.click_off",
                        "button.click_on",
                        "cake.add_candle",
                        "camera.take_picture",
                        "cant_breed",
                        "cast.spell",
                        "cauldron_drip.lava.pointed_dripstone",
                        "cauldron_drip.water.pointed_dripstone",
                        "celebrate",
                        "charge",
                        "charge.sculk",
                        "chest.closed",
                        "chest.open",
                        "chime.amethyst_block",
                        "chorusdeath",
                        "chorusgrow",
                        "conduit.activate",
                        "conduit.ambient",
                        "conduit.attack",
                        "conduit.deactivate",
                        "conduit.short",
                        "convert_mooshroom",
                        "convert_to_drowned",
                        "convert_to_frog",
                        "convert_to_stray",
                        "converted_to_zombified",
                        "copper.wax.off",
                        "copper.wax.on",
                        "crafter.craft",
                        "crafter.disable_slot",
                        "crafter.fail",
                        "crossbow.loading.end",
                        "crossbow.loading.middle",
                        "crossbow.loading.start",
                        "crossbow.quick_charge.end",
                        "crossbow.quick_charge.middle",
                        "crossbow.quick_charge.start",
                        "crossbow.shoot",
                        "dash_ready",
                        "death",
                        "death.baby",
                        "death.in.water",
                        "death.mid.volume",
                        "death.min.volume",
                        "death.screamer",
                        "death.to.zombie",
                        "default",
                        "deny",
                        "detach",
                        "disappeared",
                        "door.close",
                        "door.open",
                        "drink",
                        "drink.honey",
                        "drink.milk",
                        "drip.lava.pointed_dripstone",
                        "drip.water.pointed_dripstone",
                        "drop.slot",
                        "eat",
                        "elderguardian.curse",
                        "elemconstruct.open",
                        "enderchest.closed",
                        "enderchest.open",
                        "explode",
                        "extinguish.candle",
                        "extinguish.fire",
                        "fall",
                        "fall.big",
                        "fall.small",
                        "fang",
                        "fence_gate.close",
                        "fence_gate.open",
                        "fire",
                        "fizz",
                        "flap",
                        "flop",
                        "fly",
                        "fuse",
                        "gallop",
                        "glass",
                        "glow_squid.ink_squirt",
                        "glowstick.use",
                        "growl",
                        "haggle",
                        "haggle.idle",
                        "haggle.no",
                        "haggle.yes",
                        "heartbeat",
                        "heavy.step",
                        "hit",
                        "horn_break",
                        "horn_call0",
                        "horn_call1",
                        "horn_call2",
                        "horn_call3",
                        "horn_call4",
                        "horn_call5",
                        "horn_call6",
                        "horn_call7",
                        "hurt",
                        "hurt.baby",
                        "hurt.in.water",
                        "hurt.reduced",
                        "hurt.screamer",
                        "icebomb.hit",
                        "ignite",
                        "imitate.blaze",
                        "imitate.breeze",
                        "imitate.cave_spider",
                        "imitate.creeper",
                        "imitate.elder_guardian",
                        "imitate.ender_dragon",
                        "imitate.enderman",
                        "imitate.evocation_illager",
                        "imitate.ghast",
                        "imitate.husk",
                        "imitate.illusion_illager",
                        "imitate.magma_cube",
                        "imitate.polar_bear",
                        "imitate.shulker",
                        "imitate.silverfish",
                        "imitate.skeleton",
                        "imitate.slime",
                        "imitate.spider",
                        "imitate.stray",
                        "imitate.vex",
                        "imitate.vindication_illager",
                        "imitate.warden",
                        "imitate.witch",
                        "imitate.wither",
                        "imitate.wither_skeleton",
                        "imitate.wolf",
                        "imitate.zombie",
                        "imitate.zombie_pigman",
                        "imitate.zombie_villager",
                        "insert",
                        "insert_enchanted",
                        "irongolem.crack",
                        "irongolem.repair",
                        "item.book.put",
                        "item.fizz",
                        "item.shield.block",
                        "item.spyglass.stop_using",
                        "item.spyglass.use",
                        "item.trident.hit",
                        "item.trident.hit_ground",
                        "item.trident.return",
                        "item.trident.riptide_1",
                        "item.trident.riptide_2",
                        "item.trident.riptide_3",
                        "item.trident.throw",
                        "item.trident.thunder",
                        "item.use.on",
                        "item_given",
                        "item_taken",
                        "item_thrown",
                        "jump",
                        "jump.prevent",
                        "jump_to_block",
                        "land",
                        "large.blast",
                        "launch",
                        "lava",
                        "lava.pop",
                        "lay_egg",
                        "lay_spawn",
                        "leashknot.break",
                        "leashknot.place",
                        "levelup",
                        "listening",
                        "listening_angry",
                        "lodestone_compass.link_compass_to_lodestone",
                        "lt.reaction.bleach",
                        "lt.reaction.epaste",
                        "lt.reaction.epaste2",
                        "lt.reaction.fertilizer",
                        "lt.reaction.fire",
                        "lt.reaction.fireball",
                        "lt.reaction.icebomb",
                        "lt.reaction.mgsalt",
                        "lt.reaction.miscexplosion",
                        "lt.reaction.miscfire",
                        "lt.reaction.miscmystical",
                        "lt.reaction.miscmystical2",
                        "lt.reaction.product",
                        "mace.heavy_smash_ground",
                        "mace.smash_air",
                        "mace.smash_ground",
                        "mad",
                        "milk",
                        "milk.screamer",
                        "milk_suspiciously",
                        "mob.armadillo.brush",
                        "mob.armadillo.scute_drop",
                        "mob.armor_stand.place",
                        "mob.hoglin.converted_to_zombified",
                        "mob.husk.convert_to_zombie",
                        "mob.pig.death",
                        "mob.player.hurt_drown",
                        "mob.player.hurt_freeze",
                        "mob.player.hurt_on_fire",
                        "mob.warning",
                        "mob.warning.baby",
                        "nearby_close",
                        "nearby_closer",
                        "nearby_closest",
                        "note",
                        "note.bass",
                        "ominous_bottle.end_use",
                        "ominous_item_spawner.about_to_spawn_item",
                        "ominous_item_spawner.spawn_item",
                        "ominous_item_spawner.spawn_item_begin",
                        "panic",
                        "pant",
                        "particle.soul_escape.loud",
                        "particle.soul_escape.quiet",
                        "pick_berries.cave_vines",
                        "pickup",
                        "pickup_enchanted",
                        "piston.in",
                        "piston.out",
                        "place",
                        "plop",
                        "pop",
                        "portal",
                        "portal.travel",
                        "potion.brewed",
                        "power.off",
                        "power.off.sculk_sensor",
                        "power.on",
                        "power.on.sculk_sensor",
                        "pre_ram",
                        "pre_ram.screamer",
                        "prepare.attack",
                        "prepare.summon",
                        "prepare.wololo",
                        "presneeze",
                        "pressure_plate.click_off",
                        "pressure_plate.click_on",
                        "pumpkin.carve",
                        "purr",
                        "purreow",
                        "raid.horn",
                        "ram_impact",
                        "ram_impact.screamer",
                        "random.anvil_use",
                        "reappeared",
                        "record.11",
                        "record.13",
                        "record.5",
                        "record.blocks",
                        "record.cat",
                        "record.chirp",
                        "record.far",
                        "record.mall",
                        "record.mellohi",
                        "record.otherside",
                        "record.pigstep",
                        "record.relic",
                        "record.stal",
                        "record.strad",
                        "record.wait",
                        "record.ward",
                        "reflect",
                        "remedy",
                        "respawn_anchor.ambient",
                        "respawn_anchor.basalt_deltas.mood",
                        "respawn_anchor.charge",
                        "respawn_anchor.deplete",
                        "respawn_anchor.set_spawn",
                        "retreat",
                        "roar",
                        "saddle",
                        "scared",
                        "scrape",
                        "screech",
                        "shake",
                        "shatter_pot",
                        "shear",
                        "shoot",
                        "shulker.close",
                        "shulker.open",
                        "shulkerbox.closed",
                        "shulkerbox.open",
                        "sleep",
                        "smithing_table.use",
                        "sneeze",
                        "sonic_boom",
                        "sonic_charge",
                        "sparkler.active",
                        "sparkler.use",
                        "spawn",
                        "splash",
                        "squid.ink_squirt",
                        "squish.big",
                        "squish.small",
                        "stare",
                        "step",
                        "step.baby",
                        "step_lava",
                        "step_sand",
                        "stun",
                        "swim",
                        "swoop",
                        "takeoff",
                        "teleport",
                        "tempt",
                        "thorns",
                        "throw",
                        "thunder",
                        "tilt_down.big_dripleaf",
                        "tilt_up.big_dripleaf",
                        "tongue",
                        "trapdoor.close",
                        "trapdoor.open",
                        "trial_spawner.ambient",
                        "trial_spawner.ambient_ominous",
                        "trial_spawner.charge_activate",
                        "trial_spawner.close_shutter",
                        "trial_spawner.detect_player",
                        "trial_spawner.eject_item",
                        "trial_spawner.open_shutter",
                        "trial_spawner.spawn_mob",
                        "tripod",
                        "twinkle",
                        "ui.cartography_table.take_result",
                        "ui.loom.take_result",
                        "ui.stonecutter.take_result",
                        "undefined",
                        "unfect",
                        "vault.activate",
                        "vault.ambient",
                        "vault.close_shutter",
                        "vault.deactivate",
                        "vault.eject_item",
                        "vault.insert_item",
                        "vault.insert_item_fail",
                        "vault.open_shutter",
                        "warn",
                        "water",
                        "whine",
                        "wind_charge.burst"
                    ]
                }
            }
        },
        "2801422565": {
            "title": "minecraft:interact_button v1.20.50",
            "description": "This component is a boolean or string that determines if the interact button is shown in touch controls and what text is displayed on the button. When set as true, default \"Use Item\" text will be displayed.",
            "oneOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "string"
                }
            ]
        },
        "2819452145": {
            "title": "minecraft:can_destroy_in_creative v1.20.50",
            "description": "The can_destroy_in_creative component determines if the item can be used by a player to break blocks when in creative mode.",
            "oneOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "description": "Determines whether the item can be used to destroy blocks while in creative mode.",
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "2836600109": {
            "title": "struct Puv::v1_20_50::BlockDescriptorSerializer::BlockDescriptorProxy",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "states": {
                    "title": "associative container (class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct Puv::v1_20_50::BlockDescriptor::Compound,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct Puv::v1_20_50::BlockDescriptor::Compound> > >)",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/$defs/1290538044"
                    }
                },
                "tags": {
                    "type": "string"
                }
            }
        },
        "2849785526": {
            "title": "struct Puv::Legacy::ItemDescriptor",
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "title": "associative container (class std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >)",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            ]
        },
        "2987623390": {
            "title": "minecraft:allow_off_hand v1.20.50",
            "description": "The allow_off_hand component determines whether the item can be placed in the off hand slot of the inventory.",
            "oneOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "description": "Determines whether the item can be placed in the off hand slot.",
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "3209899485": {
            "title": "minecraft:icon v1.20.60",
            "description": "Icon item component determines which icon graphic will be used to represent the item in the UI and elsewhere.",
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "object",
                    "properties": {
                        "textures": {
                            "title": "associative container (class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >)",
                            "description": "This map contains the different textures that can be used for the item's icon. Default will contain the actual icon texture. Armor trim textures and palettes can be specified here too. The icon textures are the keys from the resource_pack/textures/item_texture.json 'texture_data' object associated with the texture file.",
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "3372804247": {
            "title": "minecraft:fuel v1.20.50",
            "description": "Fuel item component allows this item to be used as fuel in a furnace to 'cook' other items.",
            "oneOf": [
                {
                    "minimum": 0.05000000074505806,
                    "type": "number"
                },
                {
                    "type": "object",
                    "properties": {
                        "duration": {
                            "description": "Amount of time, in seconds, this fuel will cook items.",
                            "minimum": 0.05000000074505806,
                            "type": "number"
                        }
                    }
                }
            ]
        },
        "3421086714": {
            "title": "struct Puv::v1_20_50::DiggerItemComponent::BlockInfo",
            "type": "object",
            "properties": {
                "block": {
                    "description": "Block to be dug.",
                    "$ref": "#/$defs/4107396053"
                },
                "speed": {
                    "description": "Digging speed for the correlating block(s).",
                    "type": "integer"
                }
            },
            "required": [
                "block",
                "speed"
            ]
        },
        "3520278386": {
            "title": "minecraft:use_animation v1.20.50",
            "description": "Use_animation specifies which animation is played when the player uses the item.",
            "oneOf": [
                {
                    "title": "enum Puv::Legacy::UseAnimation",
                    "type": "string",
                    "enum": [
                        "block",
                        "bow",
                        "brush",
                        "camera",
                        "crossbow",
                        "drink",
                        "eat",
                        "none",
                        "spear",
                        "spyglass"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "enum Puv::Legacy::UseAnimation",
                            "description": "Specifies which animation to play when the the item is used.",
                            "type": "string",
                            "enum": [
                                "block",
                                "bow",
                                "brush",
                                "camera",
                                "crossbow",
                                "drink",
                                "eat",
                                "none",
                                "spear",
                                "spyglass"
                            ]
                        }
                    }
                }
            ]
        },
        "3566406297": {
            "title": "minecraft:stacked_by_data v1.20.50",
            "description": "The stacked_by_data component determines whether the same items with different aux values can stack. Also defines whether the item entities can merge while floating in the world.",
            "oneOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "description": "Determines whether the same item with different aux values can stack. Also defines whether the item entities can merge while floating in the world.",
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "3633237758": {
            "title": "minecraft:max_stack_size v1.20.50",
            "description": "The max_stack_size component specifies how many of the item can be stacked together.",
            "oneOf": [
                {
                    "minimum": 1.0,
                    "maximum": 64.0,
                    "type": "integer"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "description": "Specifies how many of the item that can be stacked.",
                            "minimum": 1.0,
                            "maximum": 64.0,
                            "type": "integer"
                        }
                    }
                }
            ]
        },
        "3792304927": {
            "title": "minecraft:hand_equipped v1.20.50",
            "description": "The hand_equipped component determines if an item is rendered like a tool while it is in a player's hand.",
            "oneOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "description": "Determines whether the item is rendered like a tool while in the player's hand.",
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "3828799658": {
            "title": "minecraft:enchantable v1.20.50",
            "description": "The enchantable component specifies what enchantments can be applied to the item. Not all enchantments will have an effect on all item components.",
            "type": "object",
            "properties": {
                "slot": {
                    "description": "Specifies which types of enchantments can be applied. For example, `bow` would allow this item to be enchanted as if it were a bow.",
                    "type": "string"
                },
                "value": {
                    "description": "Specifies the value of the enchantment (minimum of 0).",
                    "minimum": 0.0,
                    "type": "integer"
                }
            },
            "required": [
                "slot",
                "value"
            ]
        },
        "3906212947": {
            "title": "minecraft:food v1.20.50",
            "description": "When an item has a food component, it becomes edible to the player. Must have the 'minecraft:use_duration' component in order to function properly.",
            "type": "object",
            "properties": {
                "can_always_eat": {
                    "description": "If true you can always eat this item (even when not hungry). Default is set to false.",
                    "type": "boolean"
                },
                "nutrition": {
                    "description": "Value that is added to the entity's nutrition when the item is used. Default is set to 0.",
                    "type": "integer"
                },
                "saturation_modifier": {
                    "description": "saturation_modifier is used in this formula: (nutrition * saturation_modifier * 2) when applying the saturation buff. Default is set to 0.6.",
                    "minimum": 0.0,
                    "type": "number"
                },
                "using_converts_to": {
                    "description": "When used, converts to the item specified by the string in this field. Default does not convert item.",
                    "$ref": "#/$defs/2849785526"
                }
            }
        },
        "4107396053": {
            "title": "struct Puv::v1_20_50::BlockDescriptor",
            "oneOf": [
                {
                    "$ref": "#/$defs/2836600109"
                },
                {
                    "minLength": 1,
                    "type": "string"
                }
            ]
        },
        "4167449497": {
            "title": "struct Puv::IntRange",
            "type": "object",
            "properties": {
                "max": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                }
            }
        },
        "4293809098": {
            "title": "minecraft:display_name v1.20.50",
            "description": "The display_name item component specifies the text shown whenever an item's name is displayed, like in hover text.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "Name shown for an item.",
                    "type": "string"
                }
            }
        },
        "466752078": {
            "title": "minecraft:use_modifiers v1.20.50",
            "description": "This component modifies use effects, including how long the item takes to use and the player's speed when used in combination with components like \"shooter\", \"throwable\", or \"food\".",
            "type": "object",
            "properties": {
                "movement_modifier": {
                    "description": "Modifier value to scale the players movement speed when item is in use.",
                    "minimum": 0.0,
                    "maximum": 1.0,
                    "type": "number"
                },
                "use_duration": {
                    "description": "How long the item takes to use in seconds.",
                    "minimum": 0.0,
                    "type": "number"
                }
            }
        },
        "757583938": {
            "title": "minecraft:item_storage v1.20.50",
            "description": "The Storage Item Component is used for storing Items within an Item's User Data",
            "type": "object",
            "properties": {
                "capacity": {
                    "description": "The max capacity of the item. Default is 64",
                    "type": "integer"
                }
            }
        },
        "869455920": {
            "title": "minecraft:should_despawn v1.20.50",
            "description": "Should_despawn component determines if the item should eventually despawn while floating in the world",
            "oneOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "description": "Determines whether the item should eventually despawn while floating in the world.",
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "910690552": {
            "title": "minecraft:liquid_clipped v1.20.50",
            "description": "The liquid_clipped component determines whether the item interacts with liquid blocks on use.",
            "oneOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "object",
                    "properties": {
                        "value": {
                            "description": "Deterines whether the item interacts with liquid blocks on use.",
                            "type": "boolean"
                        }
                    }
                }
            ]
        }
    }
}